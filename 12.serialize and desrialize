#leetcode
class Codec:

    def serialize(self, root):
        res = []
        def dfs(node):
            if not node:
                res.append("N")
                return
            res.append(str(node.val))
            dfs(node.left)
            dfs(node.right)
        
        dfs(root)
        return ",".join(res)
        """Encodes a tree to a single string.
        
        :type root: TreeNode
        :rtype: str
        """
        

    def deserialize(self, data):
        vals = data.split(",")   #it will convert string to list format
        self.i = 0              #for accessing the elements of the created list
        
        def dfs():
            if self.i >= len(vals) or vals[self.i] == "N":
                self.i += 1
                return None
            
            node = TreeNode(int(vals[self.i]))
            self.i += 1
            node.left = dfs()
            node.right = dfs()
            return node
        
        return dfs()
        
        """Decodes your encoded data to tree.
        
        :type data: str
        :rtype: TreeNode
        """
