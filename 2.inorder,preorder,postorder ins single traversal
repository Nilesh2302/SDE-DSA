
def allTraversals(root):
    stack = []
    stack.append((root, 1))
    preorder = []
    inorder = []
    postorder = []

    while stack:
        node, num = stack.pop()
        if num == 1:
            preorder.append(node.val)
            stack.append((node, 2))
            if node.left:
                stack.append((node.left, 1))

        elif num == 2:
            inorder.append(node.val)
            stack.append((node, 3))
            if node.right:
                stack.append((node.right, 1))

        elif num == 3:
            postorder.append(node.val)

    return preorder, inorder, postorder
    
    
    
    
    
    
    
    
    #recommanded to dryrun this code while revising
    def allTraversals(root):
    stack = []
    stack.append((root, 1))
    preorder = []
    inorder = []
    postorder = []

    while stack:
        #just poping and assigning
        node, num = stack.pop()
        if num == 1:
            preorder.append(node.val)
            stack.append((node, 2))
            if node.left:
                stack.append((node.left, 1))

        elif num == 2:
            inorder.append(node.val)
            stack.append((node, 3))
            if node.right:
                stack.append((node.right, 1))

        elif num == 3:
            postorder.append(node.val)

    return preorder, inorder, postorder
